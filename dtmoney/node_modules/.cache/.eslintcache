[{"D:\\sites\\ignite\\dtmoney\\src\\index.tsx":"1","D:\\sites\\ignite\\dtmoney\\src\\App.tsx":"2","D:\\sites\\ignite\\dtmoney\\src\\styles\\global.ts":"3","D:\\sites\\ignite\\dtmoney\\src\\components\\Header\\index.tsx":"4","D:\\sites\\ignite\\dtmoney\\src\\components\\Dashboard\\index.tsx":"5","D:\\sites\\ignite\\dtmoney\\src\\components\\NewTransactionModal\\index.tsx":"6","D:\\sites\\ignite\\dtmoney\\src\\components\\Header\\styles.ts":"7","D:\\sites\\ignite\\dtmoney\\src\\components\\Dashboard\\styles.ts":"8","D:\\sites\\ignite\\dtmoney\\src\\components\\NewTransactionModal\\styles.ts":"9","D:\\sites\\ignite\\dtmoney\\src\\components\\TransactionsTable\\index.tsx":"10","D:\\sites\\ignite\\dtmoney\\src\\components\\Summary\\index.tsx":"11","D:\\sites\\ignite\\dtmoney\\src\\components\\TransactionsTable\\styles.ts":"12","D:\\sites\\ignite\\dtmoney\\src\\components\\Summary\\styles.ts":"13","D:\\sites\\ignite\\dtmoney\\src\\services\\api.ts":"14","D:\\sites\\ignite\\dtmoney\\src\\hooks\\useTransactions.tsx":"15"},{"size":1099,"mtime":1622678439510,"results":"16","hashOfConfig":"17"},{"size":1043,"mtime":1623087078674,"results":"18","hashOfConfig":"17"},{"size":1530,"mtime":1622038365911,"results":"19","hashOfConfig":"17"},{"size":611,"mtime":1621885686050,"results":"20","hashOfConfig":"17"},{"size":300,"mtime":1621621710713,"results":"21","hashOfConfig":"17"},{"size":2789,"mtime":1623087077301,"results":"22","hashOfConfig":"17"},{"size":657,"mtime":1621553390551,"results":"23","hashOfConfig":"17"},{"size":166,"mtime":1621608436040,"results":"24","hashOfConfig":"17"},{"size":1932,"mtime":1622236779226,"results":"25","hashOfConfig":"17"},{"size":1304,"mtime":1623087075666,"results":"26","hashOfConfig":"17"},{"size":2079,"mtime":1623087079987,"results":"27","hashOfConfig":"17"},{"size":853,"mtime":1621622740358,"results":"28","hashOfConfig":"17"},{"size":809,"mtime":1621611626870,"results":"29","hashOfConfig":"17"},{"size":110,"mtime":1621875060822,"results":"30","hashOfConfig":"17"},{"size":1594,"mtime":1623087081531,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"e781rp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\sites\\ignite\\dtmoney\\src\\index.tsx",[],["65","66"],"D:\\sites\\ignite\\dtmoney\\src\\App.tsx",["67"],"D:\\sites\\ignite\\dtmoney\\src\\styles\\global.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\Header\\index.tsx",["68","69"],"import { useState } from \"react\"\r\nimport Modal from 'react-modal'\r\nimport logoImg from \"../../assets/logo.svg\"\r\nimport { Container, Content } from \"./styles\"\r\n\r\n\r\ninterface HeaderProps{\r\n    onOpenNewTransactionModal: () => void;\r\n}\r\n\r\nexport function Header({onOpenNewTransactionModal}: HeaderProps){\r\n    return(\r\n        <Container>\r\n            <Content>\r\n                <img src={logoImg} alt=\"dt money\" />\r\n                <button type=\"button\" onClick={onOpenNewTransactionModal}>\r\n                    Nova Transação\r\n                </button>\r\n            </Content>\r\n        </Container>  \r\n    )\r\n}","D:\\sites\\ignite\\dtmoney\\src\\components\\Dashboard\\index.tsx",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\NewTransactionModal\\index.tsx",["70","71","72"],"import Modal from 'react-modal';\r\nimport React, { FormEvent, useState, useContext } from 'react';\r\nimport incomeImg from '../../assets/income.svg';\r\nimport outcomeImg from '../../assets/outcome.svg'\r\nimport closeImg from '../../assets/close.svg';\r\nimport { Container, TransactionTypeContainer, RadioBox } from './styles';\r\nimport { api } from '../../services/api';\r\nimport { TransactionsContext } from '../../TransactionsContext';\r\n\r\ninterface NewTransactionModalProps{\r\n    isOpen: boolean;\r\n    onRequestClose: ()=> void;\r\n}\r\n\r\nexport function NewTransactionModal({isOpen, onRequestClose}: NewTransactionModalProps){\r\n    \r\n    const { createTransaction }  = useContext(TransactionsContext);\r\n\r\n    \r\n    const [title, setTitle] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [type, setType] = useState('deposit');\r\n\r\n\r\n\r\n    async function handleCreateNewTransaction(event:FormEvent){\r\n        \r\n        await event.preventDefault();\r\n\r\n        createTransaction({\r\n            title, amount, category, type,\r\n        })\r\n\r\n        onRequestClose();\r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <Modal \r\n            isOpen={isOpen} \r\n            onRequestClose={onRequestClose}\r\n            overlayClassName='react-modal-overlay'\r\n            className='react-modal-content'\r\n        >\r\n            <button className='react-modal-close' type='button' onClick={onRequestClose}><img src={closeImg} alt='fechar modal'/></button>\r\n            \r\n            \r\n            <Container onSubmit={handleCreateNewTransaction} >\r\n                \r\n                <h2>Cadastrar Transação</h2>\r\n                \r\n                <input placeholder='Título' value={title} onChange={event => setTitle(event.target.value)}/>\r\n\r\n                <TransactionTypeContainer>\r\n                    \r\n                    <RadioBox type='button' onClick={() => setType('deposit')} isActive={type == 'deposit'}  activeColor='green'>\r\n                        <img src={incomeImg} alt='Entradas'/>\r\n                        <span>Entradas</span>\r\n                    </RadioBox>\r\n\r\n                    <RadioBox type='button' onClick={() => setType('withdraw')} isActive={type == 'withdraw'} activeColor='red'>\r\n                        <img src={outcomeImg} alt='Saídas'/>\r\n                        <span>Saídas</span>\r\n                    </RadioBox>\r\n                </TransactionTypeContainer>\r\n\r\n                <input placeholder='Valor' value={amount} onChange={ event => setAmount(Number(event.target.value))}/>\r\n\r\n                <input placeholder='Categoria' value={category} onChange={ event => setCategory(event.target.value)} />\r\n                \r\n                <button type='submit'>Cadastrar</button>\r\n            </Container>\r\n        \r\n        </Modal>    \r\n    )\r\n\r\n}","D:\\sites\\ignite\\dtmoney\\src\\components\\Header\\styles.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\Dashboard\\styles.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\NewTransactionModal\\styles.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\TransactionsTable\\index.tsx",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\Summary\\index.tsx",["73","74"],"D:\\sites\\ignite\\dtmoney\\src\\components\\TransactionsTable\\styles.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\components\\Summary\\styles.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\services\\api.ts",[],"D:\\sites\\ignite\\dtmoney\\src\\hooks\\useTransactions.tsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":3,"column":20,"nodeType":"81","messageId":"82","endLine":3,"endColumn":30},{"ruleId":"79","severity":1,"message":"83","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"79","severity":1,"message":"84","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":13},{"ruleId":"79","severity":1,"message":"85","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":58,"column":95,"nodeType":"88","messageId":"89","endLine":58,"endColumn":97},{"ruleId":"86","severity":1,"message":"87","line":63,"column":96,"nodeType":"88","messageId":"89","endLine":63,"endColumn":98},{"ruleId":"79","severity":1,"message":"80","line":4,"column":9,"nodeType":"81","messageId":"82","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":21,"column":29,"nodeType":"88","messageId":"89","endLine":21,"endColumn":31},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Modal' is defined but never used.","'api' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]